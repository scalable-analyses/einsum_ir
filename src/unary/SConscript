Import('g_env')


# default files
l_sources = [ 'UnaryBackend.cpp', 
              'UnaryOptimizer.cpp',]

l_tests = [ ]

if g_env['libxsmm'] != False:
  l_sources += [ 'UnaryBackendTpp.cpp' ]


#if g_env['libtorch'] != False:
#  l_tests += [ 'UnaryBackendScalar.test.torch.cpp' ]

if g_env['libxsmm'] != False and g_env['libtorch'] != False:
  l_tests += [ 'UnaryBackendTpp.test.torch.cpp' ]

for l_source in l_sources:
  g_env.sources.append( g_env.Object( l_source ) )

for l_test in l_tests:
  g_env.tests.append( g_env.Object( l_test ) )

Export('g_env')
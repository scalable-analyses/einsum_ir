name: Unit Tests (Ubuntu)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: 0 0 * * *

jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install OpenBLAS
        run: |
          sudo apt-get install libopenblas-dev

      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install PyTorch
        run: |
          python -m pip install --upgrade pip
          pip3 install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cpu
          echo LIBTORCH_PATH=$(python -c "import torch as _; print(_.__path__[0])") >> $GITHUB_ENV

      - name: Install LIBXSMM
        run: |
          git clone https://github.com/libxsmm/libxsmm.git
          cd libxsmm
          make BLAS=0 -j
          cd ..
          echo LIBXSMM_PATH=$(pwd)/libxsmm >> $GITHUB_ENV

      - name: Install einsum_ir
        run: |
          sudo apt-get install scons
          wget https://github.com/catchorg/Catch2/releases/download/v2.13.10/catch.hpp
          echo "using libxsmm path: ${LIBXSMM_PATH}"
          echo "using libtorch path: ${LIBTORCH_PATH}"
          scons mode=debug+san libtorch=${LIBTORCH_PATH} libxsmm=${LIBXSMM_PATH} blas=yes

      - name: Run unit tests
        env:
          ASAN_OPTIONS: "abort_on_error=1"
          UBSAN_OPTIONS: "halt_on_error=1:print_stacktrace=1"
          LSAN_OPTIONS: "exitcode=1"
        run: |
          ./build/tests

  bcont_lib_manual:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install LIBXSMM
        run: |
          git clone https://github.com/libxsmm/libxsmm.git
          cd libxsmm
          make BLAS=0 -j
          cd ..
          echo LIBXSMM_PATH=$(pwd)/libxsmm >> $GITHUB_ENV

      - name: Install Binary Contraction Library
        run: |
          mkdir build
          cd build
          cmake ../src/binary -DLIBXSMM_ROOT=${LIBXSMM_PATH} -DEINSUM_IR_AUTO_INSTALL_LIBXSMM=OFF
          make -j
          cd ..
          cmake --install build --prefix $(pwd)/install

  bcont_lib_auto:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install Binary Contraction Library
        run: |
          mkdir build
          cd build
          cmake ../src/binary
          make -j
          cd ..
          cmake --install build --prefix $(pwd)/install

  etops:
    strategy:
      matrix:
        python: ["3.8", "3.9", "3.10", "3.11", "3.12", "3.13"]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}

      - name: Install etops
        run: |
          python -m pip install --upgrade pip
          cd python
          SETUPTOOLS_SCM_PRETEND_VERSION=$(python version_cli.py) pip install -ve .
          python -c "import etops; print(etops.__version__)"
